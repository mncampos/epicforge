{"version":3,"sources":["components/card/card.component.jsx","components/cardList/cardList.component.jsx","components/searchBox/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","API_KEY","useState","URL","setURL","setERROR","a","fetch","encodeURIComponent","weapon","Name","json","then","res","hits","webformatURL","catch","err","useEffect","FetchData","className","alt","onError","e","target","onerror","src","JSON","stringify","replace","Cost","Damage","CardList","weapons","map","Math","random","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","response","users","setState","this","filteredWeapons","filter","toLowerCase","includes","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAGaA,EAAO,SAACC,GAEjB,IAAMC,EAAU,qCAFW,EAGLC,mBAAS,IAHJ,mBAGpBC,EAHoB,KAGfC,EAHe,OAIDF,oBAAS,GAJR,mBAIbG,GAJa,uDAU3B,sBAAAC,EAAA,sEACkBC,MAAM,gCAAD,OAAiCN,EAAjC,cAA8CO,mBAAmBR,EAAMS,OAAOC,QADrG,cAGIC,OAAOC,MAAK,SAAAC,GAAG,OAAIT,EAAOS,EAAIC,KAAK,GAAGC,iBACzCC,OAAM,SAAAC,GAAG,OAAIZ,EAAS,8EAJvB,4CAV2B,sBAyB9B,OARDa,qBAAU,YAjBqB,mCAkB/BC,MAQI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,QAAS,SAACC,GAAOA,EAAEC,OAAOC,QAAU,KAAMF,EAAEC,OAAOE,IAAI,2EAA4EA,IAAKC,KAAKC,UAAUzB,GAAK0B,QAAQ,KAAM,MAC7L,6BAAK7B,EAAMS,OAAOC,OAClB,kCAAKV,EAAMS,OAAOqB,QAClB,kCAAK9B,EAAMS,OAAOsB,cC7BbC,EAAW,SAAChC,GAAD,OACpB,qBAAKoB,UAAU,YAAf,SACKpB,EAAMiC,QAAQC,KAAI,SAAAD,GAAO,OACtB,cAAC,EAAD,CAA0BxB,OAAUwB,GAAzBE,KAAKC,gBCJfC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAErB,uBAAOnB,UAAU,SAASoB,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCwCjEG,G,wDApCb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXV,QAAS,GACTW,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBrC,MAAM,sGACLK,MAAK,SAAAiC,GAAQ,OAAIA,EAASlC,UAC1BC,MAAK,SAAAkC,GAAK,OAAI,EAAKC,SAAS,CAACd,QAASa,S,oBAIzC,WAAS,IAAD,SAE2BE,KAAKL,MAA9BV,EAFF,EAEEA,QAASW,EAFX,EAEWA,YACXK,EAAkBhB,EAAQiB,QAAO,SAAAzC,GAAM,OAC3CA,EAAOC,KAAKyC,cAAcC,SAASR,EAAYO,kBAIjD,OACE,sBAAK/B,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAWkB,YAAY,kBAAkBC,aAAc,SAAAhB,GAAC,OAAI,EAAKwB,SAAS,CAAEH,YAAarB,EAAEC,OAAO6B,WAClG,cAAC,EAAD,CAAUpB,QAASgB,W,GA9BTK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f66882d2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n\r\n    const API_KEY = '21117260-189b4a81022ca1e552dbbde37';\r\n    const [URL, setURL] = useState({});\r\n    const [ERROR, setERROR] = useState(false);\r\n\r\n    \r\n\r\n\r\n\r\n    async function FetchData(){\r\n    const url = await fetch(`https://pixabay.com/api/?key=${API_KEY}&q=${encodeURIComponent(props.weapon.Name)}`);\r\n    \r\n    url.json().then(res => setURL(res.hits[0].webformatURL))\r\n    .catch(err => setERROR('https://i.pinimg.com/564x/42/0d/e5/420de5b55490ea3c411f4d38fef74d45.jpg'));\r\n    }\r\n\r\nuseEffect(()=> {\r\nFetchData();\r\n});\r\n\r\n    \r\n\r\n\r\n\r\n return(\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" onError={(e) => {e.target.onerror = null; e.target.src=\"https://i.pinimg.com/564x/42/0d/e5/420de5b55490ea3c411f4d38fef74d45.jpg\"}} src={JSON.stringify(URL).replace(/\"/g, \"\")}/>\r\n        <h2>{props.weapon.Name}</h2>\r\n        <p> {props.weapon.Cost}</p>\r\n        <p> {props.weapon.Damage}</p>\r\n    </div>\r\n)\r\n    \r\n}","import React from 'react';\r\nimport './cardList.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'>\r\n        {props.weapons.map(weapons =>\r\n            <Card key={Math.random()} weapon = {weapons} />\r\n                )\r\n            }\r\n    </div>\r\n)","import React from 'react';\r\nimport './searchbox.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n\r\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange}/>\r\n)\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/cardList/cardList.component';\nimport { SearchBox } from './components/searchBox/searchbox.component';\nimport { createClient } from 'pexels';\n\nclass App extends Component {\n\n\n  constructor(){\n    super();\n    this.state = {\n      weapons: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://raw.githubusercontent.com/jcquinlan/dnd5-weapons-json/master/json/martialMeleeWeapons.json')\n    .then(response => response.json())\n    .then(users => this.setState({weapons: users}))\n  }\n\n\n  render(){\n\n    const { weapons, searchField } = this.state;\n    const filteredWeapons = weapons.filter(weapon =>\n      weapon.Name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n\n    return(\n      <div className='App'>\n        <h1>Epicforge</h1>\n        <SearchBox placeholder=\"Search a Weapon\" handleChange={e => this.setState({ searchField: e.target.value})} />\n        <CardList weapons={filteredWeapons} />\n      </div>\n    )\n  }\n\n  \n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}